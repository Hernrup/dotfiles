#
# Use tmuxline for statusbar
#
set -g status-bg "colour67"
set -g message-command-fg "colour253"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg "colour144"
set -g message-bg "colour16"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour253"
set -g message-command-bg "colour16"
set -g status-attr "none"
set -g pane-border-fg "colour16"
set -g status-left-attr "none"
setw -g window-status-fg "colour253"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour67"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour144"
setw -g window-status-separator ""
setw -g window-status-bg "colour67"
set -g status-left "#[fg=colour232,bg=colour144] #S #[fg=colour144,bg=colour67,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour16,bg=colour67,nobold,nounderscore,noitalics]#[fg=colour253,bg=colour16] %Y-%m-%d  %H:%M #[fg=colour144,bg=colour16,nobold,nounderscore,noitalics]#[fg=colour232,bg=colour144] #h "
setw -g window-status-format "#[fg=colour253,bg=colour67] #I #[fg=colour253,bg=colour67] #W "
setw -g window-status-current-format "#[fg=colour67,bg=colour16,nobold,nounderscore,noitalics]#[fg=colour253,bg=colour16] #I #[fg=colour253,bg=colour16] #W #[fg=colour16,bg=colour67,nobold,nounderscore,noitalics]"

#
# Makes sure that 'tmux <cmd> -c <workdir>' works
#
set-environment -g CHERE_INVOKING 1

#
# Move like vim
#
set-window-option -g mode-keys vi

set-option -g status on
set-option -g status-interval 2

set -sg escape-time 2
set -g base-index 1
setw -g pane-base-index 1

#
# A prefix key that's easier to reach
#
# unbind C-b
# set -g prefix C-Space
# bind-key Space send-prefix
bind Space last-window
bind C-Space switch-client -l

#
# Display things in living color
#
set -g default-terminal "screen-256color"

#
# Splitting windows
#
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

#
# Smart pane switching with awareness of vim splits
#
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

#
# Resizing
#
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

#
# Use vim-like bindings to highligt and yank text in copy mode.
#
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

#
# Move window positions
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

#
# Mouse
#
setw -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \;                 send-keys -M
bind -t vi-copy    C-WheelUpPane   halfpage-up
bind -t vi-copy    C-WheelDownPane halfpage-down

#
# Send to clipboard, requires cygwin package "cygutils-extra"
#
# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(getclip)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux save-buffer - | putclip"

#
# Quickly reload .tmux.conf
#
#bind r tmux source-file ~/.tmux.conf; display "Reloaded!"

# Renumber windows after one i deleted for example
set-option -g renumber-windows on
